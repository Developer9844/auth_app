version: 0.2

env:
  variables:
    AWS_REGION: us-east-1
    CONTAINER_NAME: chatapp-frontend

phases:
  pre_build:
    commands:
      - echo "Determining Branch..."
      - BRANCH_NAME=$(echo $CODEBUILD_SOURCE_VERSION | sed 's#refs/head/##')
      - echo "Current Branch is $BRANCH_NAME"
      - echo "Logging to ECR"
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 600748199510.dkr.ecr.us-east-1.amazonaws.com
      - REPOSITORY_URI=600748199510.dkr.ecr.us-east-1.amazonaws.com/dev/chatapp
      - BUILD_TAG=build-$CODEBUILD_BUILD_NUMBER
  
  build:
    commands:
      - echo Building Based on Branch
      - |
        if [ "$BRANCH_NAME" = "master" ]; then
          cd ./fe
          echo "building the docker image"
          docker build -t $REPOSITORY_URI:master-$BUILD_TAG .
        elif [ "$BRANCH_NAME" = "frontend-dev" ]; then
          echo "Building for frontend-dev branch"
          docker build -t $REPOSITORY_URI:$BUILD_TAG .
        else
          echo "Branch not recognized for special build logic. Exiting..."
          exit 1
        fi

  post_build:
    commands:
      - echo "Pushing the Docker image to ECR"
      - |
        if [ "$BRANCH_NAME" = "master" ]; then
          docker push $REPOSITORY_URI:master-$BUILD_TAG
          echo "Image $REPOSITORY_URI:master-$BUILD_TAG built and pushed successfully"
          cd ..
          echo Writing imagedefinitions.json...
          printf '[{"name":"%s", "imageUri":"%s"}]' $CONTAINER_NAME $REPOSITORY_URI:master-$BUILD_TAG > imagedefinitions.json
          cat imagedefinitions.json

        elif [ "$BRANCH_NAME" = "frontend-dev" ]; then
          docker push $REPOSITORY_URI:$BUILD_TAG
          echo "Image $REPOSITORY_URI:$BUILD_TAG built and pushed successfully"
          cd ..
          echo Writing imagedefinitions.json...
          printf '[{"name":"%s", "imageUri":"%s"}]' $CONTAINER_NAME $REPOSITORY_URI:$BUILD_TAG > imagedefinitions.json
          cat imagedefinitions.json
        fi

artifacts:
    files: 
      - imagedefinitions.json